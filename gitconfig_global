[user]
    name = David Goldstein
[credential]
	helper = cache --timeout=2600000
[merge]
    ff = only
	conflictstyle = diff3
[color]
	ui = true
[core]
    editor = vim
[format]
    # show the commit date instead of the author date.  This is the date of the rebase / amend
    # instead of the first time it was commited.
    pretty = format:"%C(auto,yellow)commit %C(auto)%H%d\nAuthor: %an <%ae>\nDate:   %cd\n\n%w(0,4,4)%B"
[log]
    # always use local timezone
    date = local
[push]
	default = simple
[alias]
	view = log --graph --oneline --decorate --boundary --all HEAD
	bopen = "!f() { git checkout origin/master -b $1; git commit -a;}; f"
    st = status
    branches = branch
    # get the name of the current branch.  Useful for other aliases.
    branch-name = "!git rev-parse --abbrev-ref HEAD"
    bdiff = diff origin/master...HEAD
    stash-unstaged = stash -k -u # stashes unstaged and untracked files
    # update master & rebase current branch onto it
    remaster = "\
!doremaster() {\
    local curbranch=\"$(git branch-name)\";\
    echo \"remastering branch ${curbranch}\";\
    git checkout master && echo \"checked out master\" &&\
    git pull origin master && echo \"pulled & updated master\" &&\
    git checkout ${curbranch} && echo \"checked out ${curbranch}\" &&\
    git rebase master && echo \"rebased onto master\";\
}; doremaster"
    # Unstage all files that have been added to the staging area
    unstage = reset HEAD
    # remove a file from git but don't delete it locally
    forget = rm --cached
    trash-local = reset --hard HEAD
    prune = fetch --prune
    squash = "!git reset --soft $1 && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\""
    stash-all = stash save --include-untracked

